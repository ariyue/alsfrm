<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"      
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"      
       xmlns:p="http://www.springframework.org/schema/p"      
       xmlns:mvc="http://www.springframework.org/schema/mvc"      
       xmlns:context="http://www.springframework.org/schema/context"      
       xmlns:util="http://www.springframework.org/schema/util"   
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
         
       xsi:schemaLocation="http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd      
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context-4.1.xsd      
            http://www.springframework.org/schema/mvc   
            http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd   
            http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
            http://www.springframework.org/schema/util   
            http://www.springframework.org/schema/util/spring-util-4.1.xsd">   
  
  	<!-- Activates annotation-based bean configuration -->  
  	<!-- 
    <context:annotation-config />  
   -->
    <!-- Scans for application @Components to deploy -->  
    <!--  
    <context:component-scan base-package="com.ansitech" />  
     -->
     <!-- 设置使用注解的类所在的jar包 -->
	<context:component-scan base-package="com.als"></context:component-scan>
    <!-- 数据源定义-->  
    
     
    
    <!-- 数据库配置文件位置 -->
	<context:property-placeholder location="classpath:/config/als-datasource.properties" />
	<!-- 配置dbcp数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="minIdle" value="${jdbc.minIdle}" />        <!-- 队列中的最小等待数 -->
		<property name="maxIdle" value="${jdbc.maxIdle}" />        <!-- 队列中的最大等待数 -->
		<property name="maxWait" value="${jdbc.maxWait}" />        <!-- 最长等待时间，单位毫秒 -->
		<property name="maxActive" value="${jdbc.maxActive}" />    <!-- 最大活跃数 -->
		<property name="initialSize" value="${jdbc.initialSize}" /><!-- 初始大小 -->
	</bean>
      
    
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="configLocation" value="classpath:config/mybatis-config.xml" /> 
        <property name="mapperLocations" value="classpath*:config/sqlmap/mysql/*.xml" />  
        <property name="typeAliasesPackage" value="com.als.mod.domain" />
    </bean>  
      
    <!-- 配置事务管理器 -->  
    <bean id="transactionManager"   
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    
    <!-- 配置SQLSession模板 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
      
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name="dataSource">  
            <ref bean="dataSource" />  
        </property>  
    </bean>  
    
    <bean id="simpleJdbcDaoSupport"
		class="org.springframework.jdbc.core.simple.SimpleJdbcDaoSupport">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
    <bean id="defaultLobHandler"   
          class="org.springframework.jdbc.support.lob.DefaultLobHandler"   
          lazy-init="true"/>  
    <!-- 查 找 类 路 径 下 的 映 射 器 并 自 动 将 它 们 创 建 成 MapperFactoryBean-->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">    
    <!--  
    	<property name="basePackage" value="com.als.**.module.**.dao" />  
    -->       
    	<!--basePackage指定要扫描的包，在此包之下的映射器都会被搜索到。可指定多个包，包与包之间用逗号或分号分隔-->
       <property name="basePackage" value="com.als.**.dao" />  
       <property name="beanName" value="*Mapper"></property>                         
    </bean>  
    
    
    <!-- AOP配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="query*" read-only="true" propagation="REQUIRED" />
			<!-- 
			<tx:method name="get*" read-only="true" propagation="REQUIRED" />
			 -->
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="delete*"  propagation="REQUIRED" />
			<tx:method name="remove*"  propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="exec*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置AOP切面 -->
	<aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.als..module..biz.*.*(..))"/>
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice"/>
    </aop:config>
    
    <bean id="springBeanUtil" class="com.als.frm.comm.util.SpringBeanUtil" />
    
	<bean id="simpleJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg>
			<ref bean="dataSource" />
		</constructor-arg>
	</bean>
	
	 <!-- 数据库方言 -->
    <bean id="dialect" class="com.als.frm.bas.dao.dialect.MySQLDialect"></bean>
    
	<bean id="basDAO" class="com.als.frm.bas.BasDAOImpl" autowire="byName">
		<!-- 
		<property name="simpleJdbcDaoSupport" ref="simpleJdbcDaoSupport" />
		<property name="simpleJdbcTemplate" ref="simpleJdbcTemplate" />
		<property name="dialect" ref="dialect"></property>
		<property name="lookupProvider" ref="lookupProvider"></property>
		 -->
	</bean>
	
	<!-- 国际化配置 --> 
	<!-- class="com.als.frm.ext.ResourceBundleMessageSourceExtend" --> 
	 <!-- 
	<bean id="messageSource"  
	    class="org.springframework.context.support.ResourceBundleMessageSource"
	>  
	    <property name="basenames">  
	    	<list>
	    		<value>config.i18n.errMessages</value>
	    		<value>config.i18n.messages</value>
	    		<value>config.i18n.</value>
	    		<value>config/i18n/*/</value> 
	    	</list>
	    </property>
	</bean>  
	 -->
	 
	
	<bean id="messageSource"
		class="com.als.frm.ext.MultipleMessageSource">
		<property name="basenames">
			<list>
	    		<value>classpath:config/i18n/*/messages</value> 
	    		<value>classpath:config/i18n/*/appMessages</value> 
	    	</list>
		</property>
	</bean>
	
	
	
	
	
	 <bean id="springContextUtil" class="com.als.frm.spr.SpringContextUtil" scope="singleton" ></bean>
	 <!--      当Spring容器启动完成后执行下面的这个Bean -->
	 <!-- 
    <bean class="com.als.frm.bootup.SpringBootOver"/>
     -->
 <!-- 缓存配置　++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- 配置eh缓存管理器 -->
   
    <bean id="ehCacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation">
			<value>classpath:config/als-ehcache.xml</value>
		</property>
	</bean>
	
	
    <bean id="frmBasConstantCacheBlock" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager" ref="ehCacheManager" />
		<property name="cacheName" value="frmBasConstantCacheBlock" />
	</bean>
	
	 <bean id="frmBasSerialCacheBlock" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager" ref="ehCacheManager" />
		<property name="cacheName" value="frmBasSerialCacheBlock" />
	</bean>
	
	<bean id="frmCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager" ref="ehCacheManager" />
		<property name="cacheName" value="frmCacheBlock" />
	</bean>
	<!-- 缓存配置 end　++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	
	<!-- Mail -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
            <list>  
                <value>classpath:config/als-mail.properties</value>  
            </list>  
        </property>  
    </bean> 
     
    <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage">  
        <property name="from">  
            <value>czmooo@qq.com</value>  
        </property>  
        <!-- 查看SimpleMailMessage源码还可以注入标题,内容等 -->  
    </bean>  
    <!-- 申明JavaMailSenderImpl对象 -->  
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">  
        <property name="defaultEncoding" value="UTF-8" />  
        <property name="host" value="mtp.exmail.qq.com" />  
        <property name="username" value="czmooo@qq.com" />  
        <property name="password" value="Chemyatapex.com" />  
        <property name="javaMailProperties">  
            <props>  
                <!-- 设置认证开关 -->  
                <prop key="mail.smtp.auth">true</prop>  
                <!-- 启动调试开关 -->  
                <prop key="mail.debug">true</prop>  
                <!-- 设置发送延时 -->
                <prop key="mail.smtp.timeout">0</prop>
            </props>  
        </property>  
    </bean>  
    
	<!-- Mail end -->
  
</beans>  